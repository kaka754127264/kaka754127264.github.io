<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>delphi Adoconnection 连接MS SQLServer</title>
      <link href="2020/09/23/delphi-Adoconnection-%E8%BF%9E%E6%8E%A5MS-SQLServer/"/>
      <url>2020/09/23/delphi-Adoconnection-%E8%BF%9E%E6%8E%A5MS-SQLServer/</url>
      
        <content type="html"><![CDATA[<p>delphi新建一个adoconnection </p><p><img src="https://raw.githubusercontent.com/kaka754127264/GIt_Data/master/1.png" alt="Image text"></p><p><img src="https://raw.githubusercontent.com/kaka754127264/GIt_Data/master/2.png" alt="Image text"></p><p><img src="https://raw.githubusercontent.com/kaka754127264/GIt_Data/master/3.png" alt="Image text"></p><p><img src="https://raw.githubusercontent.com/kaka754127264/GIt_Data/master/4.png" alt="Image text"></p><p><img src="https://raw.githubusercontent.com/kaka754127264/GIt_Data/master/5.png" alt="Image text"></p><p>然后确认</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>delphi数组</title>
      <link href="2020/09/22/delphi%E6%95%B0%E7%BB%84/"/>
      <url>2020/09/22/delphi%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a><strong>数组</strong></h1><p>按照一定编号存放一些类型相同数据的容器</p><p>管理相同类型的数据时更加方便</p><pre><code>array[indexType1,...,indexTypen] of baseType;</code></pre><p>1、数组在使用之前必须要声明长度（下标、元素总和）</p><p>2、</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>delphi集合类型</title>
      <link href="2020/09/22/delphi%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B/"/>
      <url>2020/09/22/delphi%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="集合类型"><a href="#集合类型" class="headerlink" title="集合类型"></a>集合类型</h1><p><strong>集合是由具有某些共同特征的元素构成的一个整体。在pascal中，一个集合是由具有同一有序类型的一组数据元素所组成，这一有序类型称为该集合的基类型</strong></p><p>集合的定义</p><pre><code>`var    Vset1：set1；    Vset2：set of byte；`</code></pre><p>1、集合类型的所有成员必须是<strong>同一</strong>有序类型且最多只能含256个成员；<br>2、集合类型成员具有唯一性，即同一集合类型中不允许含有相同的成员；<br>3、集合类型的值域由BaseType的值域决定</p><h1 id="标准的定义方式"><a href="#标准的定义方式" class="headerlink" title="标准的定义方式"></a>标准的定义方式</h1><pre><code>`Type    Set1 = set of byte;    TMySet = set of Char;    TMySet1 = set of &#39;a&#39;..&#39;z&#39;; &#123;集合&amp;子界混合&#125; var    TMyset2 = set of 1..2;    MySet: TMySet;`</code></pre><p>byte是 基类型</p><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><pre><code>TypeSet1 = set of byte;         //set1的成员为byte型，值域为0至255，共255整型值Set2 = set of 1..9;        //set2的成员为子界型，值域为1至9，共9整型值Set3 = set of（red，green，blue）;        //set3的成员为枚举型，值域为3个标识符</code></pre><h1 id="合法的用法"><a href="#合法的用法" class="headerlink" title="合法的用法"></a>合法的用法</h1><pre><code>type  number = set of 0..9;  ch      = set of char;  days      = (sun,mon,tue,wed,thu,fri,sat);var  s:number;  c:ch;  week:days;</code></pre><h1 id="等同于"><a href="#等同于" class="headerlink" title="等同于"></a>等同于</h1><pre><code>var   s:set of 0..9；                               //子界      c:set of char；  week: (sun ,mon ,tue ,wed ,thu ,fri ,sat); //枚举</code></pre><p>集合的值放在方括号中，中间用逗号隔开。</p><p>集合中没有任何元素，这样的集合称为空集。</p><p>集合中连续元素的值可以使用子界型的表示方法。</p><p>集合的值与集合内元素的出现次序无关。</p><p>集合中的同一元素重复出现对集合的值没有影响。</p><p>集合不能进行算数运算，集合是无序的，不能使用ord、pred（前一个元素）、succ（后一个元素）等函数。</p><p>赋值运算，只能通过赋值语句给集合变量赋值，不能通过读语句赋值，也不能通过写语句直接输出集合变量的值。</p><h1 id="集合的赋值操作"><a href="#集合的赋值操作" class="headerlink" title="集合的赋值操作"></a>集合的赋值操作</h1><p> #</p><p>添加一个集合元素Include（s,1）；</p><p>删除一个集合元素Exclude（s,1）；</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>delphi子界</title>
      <link href="2020/09/22/delphi%E5%AD%90%E7%95%8C/"/>
      <url>2020/09/22/delphi%E5%AD%90%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="子界-sub-boundaries"><a href="#子界-sub-boundaries" class="headerlink" title="子界    (sub-boundaries)"></a>子界    (sub-boundaries)</h1><p>type 子界类型 标识符 = 常量1…常量2</p><p>常量1称为子界的下界，常量2称为子界的上界</p><h2 id=""><a href="#" class="headerlink" title="##"></a>##</h2><p>要求上界和下界为有序的数据类型 整数、字符、枚举</p><p>子界的上界大于或者等于下界</p><p>为了防止出现越界 </p><pre><code>type     TSubBound=1..10；type     age = 1..100;    letter = &#39;a&#39;..&#39;z&#39;;type     TsubBoundChar = &#39;a&#39;..&#39;z&#39;;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>delphi枚举</title>
      <link href="2020/09/22/delphi%E6%9E%9A%E4%B8%BE/"/>
      <url>2020/09/22/delphi%E6%9E%9A%E4%B8%BE/</url>
      
        <content type="html"><![CDATA[<p>{<br>枚举；<br>常量集</p><p>常量，我们一开始就定义好的一些值，以后在程序的运行过程中不允许改变，例如圆周率<br>type<br>枚举名=(标识符1,标识符2…’)  ，不能使用字符串跟具体的值</p><p>}</p><p>const<br>  yuanzhoulv: Double = 3.15;<br>  //常量的定义方式，可以不进行类型声明，编译器会根据具体的值来决定常量的类型<br>  yuanzhoulv2 = 3;</p><p>type<br>//（<em>正常情况下索引都是从0开始</em> name=value）<br>  Edays = (sun = 0, mon = 1, tue = 2, wed = 3, thu = 4, fir = 5, sat = 6);</p><p>  Ecolor = (red, green, blue);</p><p>  //获取枚举中的单个元素<br>procedure demo1();<br>begin<br>  Color := Ecolor.blue;<br>  week := Edays.sun;</p><p>  Writeln(Ord(Color), Ord(week), Ord(‘a’));<br>end;</p><p>//使用循环遍历，枚举元素<br>procedure demo2();<br>begin<br>             //获取一个容器的最低位<br>       //遍历枚举<br>  Eindex := 0;<br>  for Color := Low(Ecolor) to High(Ecolor) do<br>  begin<br>//    Writeln(GetEnumName(TypeInfo(Ecolor), Eindex));<br>//    Writeln(GetEnumValue(TypeInfo(Ecolor), ‘red’));<br>    Ename := GetEnumName(TypeInfo(Ecolor), Eindex);<br>    Evalue := GetEnumValue(TypeInfo(Ecolor), Ename);<br>    Writeln(Ename, ‘,’, Evalue);<br>//    Writeln(Ord(Color));<br>//    Eindex:= Eindex+1;<br>//做优化<br>    Inc(Eindex);</p><p>  end;<br>end;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>.github.io无法访问的问题</title>
      <link href="2020/09/22/github-io%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>2020/09/22/github-io%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>GitHub.io托管不能访问的原因</p><p>访问被拒绝多是dns服务器出了问题，把DNS换成114.114.114.114不作用，8.8.8.8不作用</p><p>使用208.67.222.222（opendns）可以正常解析，将其设置为备用DNS即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>web.xml里面的init-param报错</title>
      <link href="2020/09/22/web-xml%E9%87%8C%E9%9D%A2%E7%9A%84init-param%E6%8A%A5%E9%94%99/"/>
      <url>2020/09/22/web-xml%E9%87%8C%E9%9D%A2%E7%9A%84init-param%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<servlet>        <servlet-name>test</servlet-name>        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>        <!-- 表示容器再启动时立即加载servlet --><pre><code>    &lt;init-param&gt;    &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;    &lt;param-value&gt;web.xml&lt;/param-value&gt;    &lt;/init-param&gt;    &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</code></pre></servlet><p>顺序问题</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/09/22/hello-world/"/>
      <url>2020/09/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
